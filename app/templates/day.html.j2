{% extends "base.html.j2" %}

{% block styles %}
<style>
.actions a:hover {
    text-decoration: none;
}
.title {
    font-size: 1.5em;
    margin: 0.25em 0 1em;
}

.opening header {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.visit .mark-finished,
.visit .mark-paused,
.visit.started .mark-started {
    display: none;
}
.visit.started .mark-paused,
.visit.started .mark-finished {
    display: initial;
}
</style>
{% endblock %}

{% block content %}
<div class="container">
    <h1>{{ date | arrow('format', 'D MMM YYYY') }}</h1>
</div>

{% for opening in openings %}
<div class="container widget opening" data-opening="{{ opening.id }}">
    <header>
        <div class="title">
            {{ opening.start | arrow('time') }}
            -
            {{ opening.end | arrow('time') }}
            <span class="badge">{{ opening.scope }}</span>
        </div>
        <div class="actions">
            <a class="btn waves-effect waves-light red" href="{{ url_for('.opening_delete', id=opening.id) }}">
                <i class="material-icons">delete</i>
            </a>
        </div>
    </header>
    <main>
        <div class="row">
            <div class="input-field col s10">
                <label>Ajouter un visiteur</label>
                <input type="text" class="autocomplete visitor-input" name="add-visitor-text">
            </div>
            <div class="input-field col s2">
                <button class="btn waves-effect waves-light" type="submit" name="add-visitor-button">
                    <i class="material-icons">add</i>
                </button>
            </div>
        </div>
        <ul class="collection">
            {% for visit in opening.visits %}
            {% with visitor = visit.visitor %}
            <li
                class="
                    visit
                    collection-item
                    {% if visit.paid %}
                    paid
                    {% else %}
                    unpaid
                    {% endif %}
                    "
                data-visitor-id="{{ visitor.id }}"
            >
                {% include "_visitor_item.html.j2" %}
                <a href="{{ url_for('.visitor_edit', id=visitor.id) }}">
                    <i class="material-icons">edit</i>
                </a>
                {% if visit.finished and not visit.paid %}
                <span class="badge red">
                    Impayé
                </span>
                {% endif %}
                <span class="right actions">
                    <a class="mark-started">
                        <i class="material-icons">play_arrow</i>
                    </a>
                    <a class="mark-paused">
                        <i class="material-icons">pause</i>
                    </a>
                    <a class="mark-finished">
                        <i class="material-icons">stop</i>
                    </a>
                    <a class="delete">
                        <i class="material-icons">delete</i>
                    </a>
                </span>
            </li>
            {% endwith %}
            {% endfor %}
        </ul>
    </main>
</div>
{% endfor %}

<div class="container widget">
    <div class="title">Créer une ouverture</div>
    {% include "_form_errors.html.j2" %}
    <form action="." method="post">
        {{ form.hidden_tag() }}
        <div class="row">
            <div class="input-field col s6">
                <i class="material-icons prefix">date_range</i>
                <input
                    type="text"
                    name="{{ form.start_date.name }}"
                    id="{{ form.start_date.id }}"
                    class="datepicker"
                    value="{{ form.start_date.data }}"
                    disabled="disabled"
                >
                {{ form.start_date.label }}
            </div>
            <div class="input-field col s6">
                <i class="material-icons prefix">access_time</i>
                <input
                    type="text"
                    name="{{ form.start_time.name }}"
                    id="{{ form.start_time.id }}"
                    class="timepicker"
                    value="{{ form.start_time.data or '16:00'}}"
                >
                {{ form.start_time.label }}
            </div>
        </div>
        <div class="row">
            <div class="input-field col s6">
                <i class="material-icons prefix">date_range</i>
                <input
                    type="text"
                    name="{{ form.end_date.name }}"
                    id="{{ form.end_date.id }}"
                    class="datepicker"
                    value="{{ form.end_date.data }}"
                >
                {{ form.end_date.label }}
            </div>
            <div class="input-field col s6">
                <i class="material-icons prefix">access_time</i>
                <input
                    type="text"
                    name="{{ form.end_time.name }}"
                    id="{{ form.end_time.id }}"
                    class="timepicker"
                    value="{{ form.end_time.data or '22:00' }}"
                >
                {{ form.end_time.label }}
            </div>
        </div>
        <div class="row">
            <div class="input-field col s3">
                {{ form.scope }}
                {{ form.scope.label }}
            </div>
        </div>
        <button class="btn waves-effect waves-light" type="submit">Créer</button>
    </form>
</div>

{% endblock %}

{% block scripts %}
<script>
document.addEventListener('DOMContentLoaded', () => {
    const visitors = {{ visitors | tojson }};
    for (let el of document.querySelectorAll('.visitor-input')) {
        M.Autocomplete.init(el, {
            data: visitors.reduce((acc, visitor) => {
                acc[visitor] = null;
                return acc;
            }, {}),
            minLength: 0,
        });
    }

    for (const openingContainer of document.querySelectorAll('[data-opening]')) {
        const addVisitorButton = openingContainer.querySelector('[name="add-visitor-button"]');
        const input = openingContainer.querySelector('[name="add-visitor-text"]');
        const openingId = openingContainer.dataset.opening;

        addVisitorButton.addEventListener('click', async () => {
            const visitor = input.value;
            const visitorId = visitor.match(/\(#(\d+)\)$/);
            if (!visitorId)
                return;

            const result = await fetch(`/api/openings/${openingId}/visitors/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ visitor_id: visitorId[1] }),
            })
            if (!result.ok) {
                console.error('Failed to add visitor');
                return;
            }
            window.location.href = window.location.href;
        });

        for (const visitContainer of openingContainer.querySelectorAll('.visit')) {
            const visitorId = visitContainer.dataset.visitorId;
            const startButton = visitContainer.querySelector('.mark-started');
            const finishButton = visitContainer.querySelector('.mark-finished');
            const deleteButton = visitContainer.querySelector('.delete');

            startButton.addEventListener('click', async () => {
                visitContainer.classList.add('started');
                visitContainer.classList.remove('finished');
            });

            finishButton.addEventListener('click', async () => {
                visitContainer.classList.remove('started');
                visitContainer.classList.add('finished');
            });

            deleteButton.addEventListener('click', async () => {
                const result = await fetch(`/api/openings/${openingId}/visitors/${visitorId}`, {
                    method: 'DELETE',
                });
                if (!result.ok) {
                    console.error('Failed to delete visitor');
                    return;
                }
                visitContainer.remove();
            });
        }
    }
});
</script>
{% endblock scripts %}
